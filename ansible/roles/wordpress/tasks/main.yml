- name: Create bin directory
  file:
    state: directory
    path: "{{ wordpress_webroot }}/bin"
    owner: "{{ webserver_vhost_user }}"
    group: "{{ webserver_vhost_group }}"
    mode: 0755

#
# Composer
#
- name: Check that the composer command exists
  stat:
    path: "{{ wordpress_webroot }}/bin/composer"
  register: composer_stat_result

- name: Download composer command installer
  get_url:
    url: https://getcomposer.org/installer
    checksum: "sha384:756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3"
    dest: "./composer-setup.php"
    force: true
  when: not composer_stat_result.stat.exists

- name: Install composer command
  shell: |
    php composer-setup.php
    php -r "unlink('composer-setup.php');"
    chown "{{ webserver_vhost_user }}:{{ webserver_vhost_group }}" composer.phar
    chmod 644 composer.phar
    mv composer.phar "{{ wordpress_webroot }}/bin/composer"
  when: not composer_stat_result.stat.exists

#
# WP-CLI
#
- name: Check that the wp-cli command exists
  stat:
    path: "{{ wordpress_webroot }}/bin/wp"
  register: wpcli_stat_result

- name: Download wp-cli and install
  get_url:
    url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    dest: "{{ wordpress_webroot }}/bin/wp"
    owner: "{{ webserver_vhost_user }}"
    group: "{{ webserver_vhost_group }}"
    mode: 0755
    force: true
  when: not wpcli_stat_result.stat.exists

#
# WordPress
#
- name: Check whether wordpress core already has been installed
  stat:
    path: "{{ wordpress_webroot }}/public/{{ wordpress_dir }}/wp-config.php"
  register: wordpress_stat_result

- name: Download wordpress
  get_url:
    url: "https://wordpress.org/wordpress-{{ wordpress_version }}.tar.gz"
    checksum: "{{ wordpress_checksum }}"
    dest: "/tmp/wordpress.tar.gz"
  when: not wordpress_stat_result.stat.exists

- name: Extract wordpress core
  unarchive:
    src: "/tmp/wordpress.tar.gz"
    dest: "{{ wordpress_webroot }}/public"
    owner: "{{ webserver_vhost_user }}"
    group: "{{ webserver_vhost_group }}"
    remote_src: yes
  when: not wordpress_stat_result.stat.exists

- name: Populate index.php templates
  template:
    src: index.php.j2
    dest: "{{ wordpress_webroot }}/public/index.php"
    owner: "{{ webserver_vhost_user }}"
    group: "{{ webserver_vhost_group }}"
  when: not wordpress_stat_result.stat.exists

- name: Populate wp-config.php
  template:
    src: wp-config.php.j2
    dest: "{{ wordpress_webroot }}/public/{{ wordpress_dir }}/wp-config.php"
    owner: "{{ webserver_vhost_user }}"
    group: "{{ webserver_vhost_group }}"
  when: not wordpress_stat_result.stat.exists

- name: Core install
  shell: |
      {{ wordpress_webroot }}/bin/wp core install \
        --url={{ wordpress_front_url }} \
        --title={{ wordpress_site_title }} \
        --admin_email={{ secret.wordpress.admin_email }} \
        --admin_user={{ secret.wordpress.admin }} \
        --admin_password={{ secret.wordpress.admin_passwd }} \
        --path={{ wordpress_webroot }}/public/wordpress
  become: yes
  become_user: "{{ webserver_vhost_user }}"
  when: not wordpress_stat_result.stat.exists

- name: Configure options
  shell: |
      {{ wordpress_webroot }}/bin/wp --path={{ wordpress_webroot }}/public/wordpress option update siteurl '{{ wordpress_core_url }}'
      {{ wordpress_webroot }}/bin/wp --path={{ wordpress_webroot }}/public/wordpress option update timezone_string 'Asia/Tokyo'
  become: yes
  become_user: "{{ webserver_vhost_user }}"
  when: not wordpress_stat_result.stat.exists

- name: Configure plugins
  shell: |
      {{ wordpress_webroot }}/bin/wp --path={{ wordpress_webroot }}/public/wordpress plugin install litespeed-cache --activate
  become: yes
  become_user: "{{ webserver_vhost_user }}"
  when: not wordpress_stat_result.stat.exists
